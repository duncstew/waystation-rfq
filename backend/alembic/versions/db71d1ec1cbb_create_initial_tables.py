"""Create initial tables

Revision ID: db71d1ec1cbb
Revises: 
Create Date: 2025-09-04 22:34:43.840444

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'db71d1ec1cbb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certifications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rfqs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('item', sa.String(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('amount_required_lbs', sa.Float(), nullable=True),
    sa.Column('ship_to_location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('contact_name', sa.String(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=False),
    sa.Column('contact_phone', sa.String(), nullable=True),
    sa.Column('hq_address', sa.String(), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_name'),
    sa.UniqueConstraint('contact_email')
    )
    op.create_table('quotes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('date_submitted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('supplier_id', sa.String(), nullable=False),
    sa.Column('price_per_pound', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('country_of_origin', sa.String(), nullable=True),
    sa.Column('min_order_quantity', sa.Integer(), nullable=True),
    sa.Column('rfq_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['rfq_id'], ['rfqs.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('supplier_id', 'rfq_id', name='_supplier_rfq_uc')
    )
    op.create_table('rfq_certifications',
    sa.Column('rfq_id', sa.String(), nullable=False),
    sa.Column('certification_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['certification_id'], ['certifications.id'], ),
    sa.ForeignKeyConstraint(['rfq_id'], ['rfqs.id'], ),
    sa.PrimaryKeyConstraint('rfq_id', 'certification_id')
    )
    op.create_table('emails',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('raw_text', sa.Text(), nullable=False),
    sa.Column('extracted_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('quote_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quote_certifications',
    sa.Column('quote_id', sa.String(), nullable=False),
    sa.Column('certification_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['certification_id'], ['certifications.id'], ),
    sa.ForeignKeyConstraint(['quote_id'], ['quotes.id'], ),
    sa.PrimaryKeyConstraint('quote_id', 'certification_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quote_certifications')
    op.drop_table('emails')
    op.drop_table('rfq_certifications')
    op.drop_table('quotes')
    op.drop_table('suppliers')
    op.drop_table('rfqs')
    op.drop_table('certifications')
    # ### end Alembic commands ###
